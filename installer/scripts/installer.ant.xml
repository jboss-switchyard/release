<!--
  ~ JBoss, Home of Professional Open Source
  ~ Copyright 2011 Red Hat Inc. and/or its affiliates and other contributors
  ~ as indicated by the @author tags. All rights reserved.
  ~ See the copyright.txt in the distribution for a
  ~ full listing of individual contributors.
  ~
  ~ This copyrighted material is made available to anyone wishing to use,
  ~ modify, copy, or redistribute it subject to the terms and conditions
  ~ of the GNU Lesser General Public License, v. 2.1.
  ~ This program is distributed in the hope that it will be useful, but WITHOUT A
  ~ WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
  ~ PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
  ~ You should have received a copy of the GNU Lesser General Public License,
  ~ v.2.1 along with this distribution; if not, write to the Free Software
  ~ Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  ~ MA  02110-1301, USA.
  -->

<project name="SwitchYard AS7 Installer" default="install" basedir=".">

	<!--  The following -D properties can be used to control install behavior:
	         o AS7_PATH = path to AS7 install - prevents input prompt
	         o SKIP_CONSOLE = do not install console
			 o SKIP_BPEL_CONSOLE = do not install BPEL console
	         o SKIP_FORGE = do not install forge
                 o SKIP_AS7 = do not install SwitchYard to AS7
	 -->

    <property file="installer.properties"/>

    <target name="download-sy-as7-check">
 	<condition property="sy.as7.not.available">
          <not>
            <available file="res/switchyard-as7-bundle.zip"/>
          </not>
        </condition>
    </target>

    <target name="download-as7-check">
        <condition property="as7.not.available">
          <and>
            <not>
              <available file="res/jboss-as-${as7.version}.zip"/>
            </not>
          </and>
        </condition>
    </target>

    <target name="download-sy-tools-check">
        <condition property="sy.tools.not.available">
          <and>
            <isset property="installForge"/>
            <not>
	      <available file="res/switchyard-tools.zip"/>
            </not>
          </and>
        </condition>
    </target>

    <target name="download-sy-tools" depends="download-sy-tools-check" if="sy.tools.not.available">
        <echo>Downloading SwitchYard Tools Bundle ...</echo>
        <get src="${switchyard.tools.url}" dest="res/switchyard-tools.zip"/>
    </target>

    <target name="extract-sy-tools-forge" depends="download-sy-tools" if="installForge">
        <unzip src="res/switchyard-tools.zip" dest="res/" overwrite="true">
            <mapper type="flatten"/>
        </unzip>
    </target>

    <target name="extract-sy-tools-console" depends="download-sy-tools" if="installSYConsole">
        <unzip src="res/switchyard-tools.zip" dest="res/" overwrite="true">
            <mapper type="flatten"/>
        </unzip>
    </target>

    <target name="extract-sy-tools-bpel-console" depends="download-sy-tools" if="installBPELConsole">
        <unzip src="res/switchyard-tools.zip" dest="res/" overwrite="true">
            <mapper type="flatten"/>
        </unzip>
    </target>

    <target name="download-as7-zip" depends="download-as7-check" if="as7.not.available">
        <echo>Downloading AS7 ...</echo>
        <get src="${as7.dist.url}" dest="res/jboss-as-${as7.version}.zip"/>
    </target>

    <target name="download-as7" depends="download-as7-zip">
	<echo>Installing AS7 ...</echo>
        <unzip src="res/jboss-as-${as7.version}.zip" dest="${basedir}" overwrite="true"/>
    	<chmod dir="${basedir}/jboss-as-${as7.version}/bin" perm="ugo+rx" includes="**/*.sh"/>
    </target>

    <target name="download-sy-as7" depends="download-sy-as7-check" if="sy.as7.not.available">
        <echo>Downloading SwitchYard AS7 Bundle ..."</echo>
        <get src="${as7.bundle.url}" dest="res/switchyard-as7-bundle.zip"/>
    </target>

    <target name="download-sy-forge-module-check">
        <condition property="sy.forge.module.not.available">
            <not>
              <available file="res/switchyard-forge-plugins.zip"/>
           </not>
        </condition>
    </target>

    <target name="download-sy-forge-module" depends="download-sy-forge-module-check, extract-sy-tools-forge" if="sy.forge.module.not.available">
    </target>

    <target name="download-sy-console-check">
        <condition property="sy.console.not.available">
           <and>
             <not>
               <available file="res/switchyard-console-application.war"/>
             </not>
             <isset property="installSYConsole"/>
           </and>
        </condition>
    </target>

    <target name="download-sy-console" depends="download-sy-console-check, extract-sy-tools-console" if="sy.console.not.available">
    </target>

    <target name="download-bpel-console-check">
        <condition property="bpel.console.not.available">
           <and>
             <not>
               <available file="res/switchyard-bpel-console.war"/>
             </not>
             <isset property="installBPELConsole"/>
           </and>
        </condition>
    </target>

    <target name="download-bpel-console" depends="download-bpel-console-check, extract-sy-tools-bpel-console" if="bpel.console.not.available">
    </target>

    <target name="request-forge-install" unless="SKIP_FORGE">
        <input message="Would you like to install the SwitchYard Forge Module (y/n)?" addproperty="install.forge.question" validargs="y,n" defaultvalue="y" />

	<condition property="installForge">
           <and>
              <isset property="install.forge.question" />
              <equals arg1="${install.forge.question}" arg2="y" />
           </and>
        </condition>
    </target>

    <target name="request-sy-console-install" unless="switchyardConsoleAlreadyInstalled">
        <input message="Would you like to install the SwitchYard Console (y/n)?" addproperty="install.sy.console.question" validargs="y,n" defaultvalue="y" />

        <condition property="installSYConsole">
           <and>
              <isset property="install.sy.console.question" />
              <equals arg1="${install.sy.console.question}" arg2="y" />
           </and>
        </condition>
    </target>

    <target name="request-bpel-console-install" unless="BPELConsoleAlreadyInstalled">
        <input message="Would you like to install the BPEL Console (y/n)?" addproperty="install.bpel.console.question" validargs="y,n" defaultvalue="y" />

        <condition property="installBPELConsole">
           <and>
              <isset property="install.bpel.console.question" />
              <equals arg1="${install.bpel.console.question}" arg2="y" />
           </and>
        </condition>
    </target>

    <target name="request-sy-install" unless="SKIP_AS7">
        <input message="Would you like to install the SwitchYard distribution to your AS7 installation (y/n)?" addproperty="install.sy.dist.question" validargs="y,n" defaultvalue="y" />
        <condition property="installSYDit">
           <and>
              <isset property="install.sy.dist.question" />
              <equals arg1="${install.sy.dist.question}" arg2="y" />
           </and>
        </condition>

        <condition property="SKIP_AS7">
	   <and>
              <isset property="install.sy.dist.question" />
              <equals arg1="${install.sy.dist.question}" arg2="n" />
           </and>
        </condition>

	<condition property="skip.as7.folder.question">
          <and>
            <not>
              <isset property="AS7_PATH"/>
            </not>
            <not>
              <isset property="SKIP_AS7"/>
            </not>
          </and>
        </condition>
    </target>

    <target name="get-jboss-path-question" depends="request-sy-install" if="skip.as7.folder.question" unless="SKIP_AS7">
        <input message="Please enter the path to the root folder of your JBoss AS7 installation (or press return if you would like the installer to download an AS7 distribution): " addproperty="AS7_PATH_ENTERED" />
        <condition property="AS7_PATH_CHECK" value="${AS7_PATH_ENTERED}">
            <and>
            <isset property="AS7_PATH_ENTERED"/>
            <not>
              <matches string="${AS7_PATH_ENTERED}" pattern="^$"/>
            </not>
            </and>
        </condition>
    </target>

    <target name="get-jboss-path" depends="get-jboss-path-question" if="AS7_PATH_CHECK">
        <pathconvert targetos="unix" property="AS7_PATH" setonempty="false">
            <path>
                <pathelement location="${AS7_PATH_CHECK}"/>
            </path>
        </pathconvert>
    </target>

    <target name="install" description="Install SwitchYard into JBoss (optionally specified by AS7_PATH)"
        depends="download-sy-as7, get-jboss-path">
        <property name="AS7_PATH" value="${basedir}/jboss-as-${as7.version}"/>
        <property name="QUICKSTART_PATH" value="${basedir}"/>
        <condition property="isAS7">
           <or>
            <available file="${AS7_PATH}/jboss-modules.jar" />
            <isset property="SKIP_AS7"/>
           </or>
        </condition>
        <antcall target="notAS7"/>

        <condition property="quickstartResourcesAlreadyInstalled">
          <or>
            <available file="quickstarts" filepath="${QUICKSTART_PATH}" />
	    <isset property="SKIP_AS7"/>
          </or>
        </condition>
        <condition property="switchyardResourcesAlreadyInstalled">
          <or>
            <available file="switchyard" filepath="${AS7_PATH}/modules/org" />
            <isset property="SKIP_AS7"/>
          </or>
        </condition>
        <condition property="switchyardConsoleAlreadyInstalled">
          <or>
            <available file="switchyard-console-application.war" filepath="${AS7_PATH}/modules/org/jboss/as/console/main" />
            <isset property="SKIP_CONSOLE"/>
          </or>
        </condition>
        <condition property="BPELConsoleAlreadyInstalled">
          <or>
            <available file="switchyard-bpel-console.war" filepath="${AS7_PATH}/standalone/deployments" />
            <isset property="SKIP_BPEL_CONSOLE"/>
          </or>
        </condition>

        <antcall target="unzipSwitchyardResources">
            <param name="AS7_PATH" value="${AS7_PATH}"/>
        </antcall>
        <antcall target="unzipQuickstartResources">
            <param name="AS7_PATH" value="${AS7_PATH}"/>
        </antcall>
        <antcall target="install-forge">
            <param name="AS7_PATH" value="${AS7_PATH}"/>
	</antcall>
        <antcall target="install-sy-console">
            <param name="AS7_PATH" value="${AS7_PATH}"/>
	</antcall>
		<antcall target="install-bpel-console">
            <param name="AS7_PATH" value="${AS7_PATH}"/>
	</antcall>
    </target>

    <target name="unzipSwitchyardResources" unless="switchyardResourcesAlreadyInstalled">
        <!-- Install into the AS7 install.... -->
        <unzip src="res/switchyard-as7-bundle.zip" dest="${AS7_PATH}" overwrite="true">
            <patternset>
                <include name="standalone/**" />
                <include name="modules/**" />
            </patternset>
        </unzip>
        <xslt style="res/standalone.xsl"
              basedir="${AS7_PATH}/standalone/configuration"
              destdir="${AS7_PATH}/standalone/configuration"
              includes="standalone.xml,standalone-preview.xml,standalone-full.xml"/>
        <move overwrite="true" todir="${AS7_PATH}/standalone/configuration">
          <filelist dir="${AS7_PATH}/standalone/configuration">
            <file name="standalone.html"/>
          </filelist>
          <mapper type="regexp" from="^(.*)\.html$$" to="\1.xml"/>
        </move>
        <!-- Allow this move to fail without error in case of 7.1.0.Beta1 -->
        <move overwrite="true" todir="${AS7_PATH}/standalone/configuration"
          failonerror="false">
          <filelist dir="${AS7_PATH}/standalone/configuration">
            <file name="standalone-preview.html"/>
          </filelist>
          <mapper type="regexp" from="^(.*)\.html$$" to="\1.xml"/>
        </move>
		<antcall target="transform-console-module" />
		<antcall target="transform-hibernate-module" />
    </target>

    <target name="unzipQuickstartResources" unless="quickstartResourcesAlreadyInstalled">
        <!-- Install SwitchYard stuff into this directory.... -->
        <unzip src="res/switchyard-as7-bundle.zip" dest="${QUICKSTART_PATH}" overwrite="true">
            <patternset>
                <include name="quickstarts/**" />
            </patternset>
        </unzip>
    </target>

    <target name="notAS7" unless="isAS7">
        <echo>The specified path '${AS7_PATH}' is not a path to a valid JBoss AS7 installation."</echo>

        <input message="Would you like to download an AS7 distribution (y/n)?"          addproperty="install.sy.console.question" validargs="y,n" defaultvalue="y" />

        <condition property="installSYConsole">
           <and>
              <isset property="install.sy.console.question" />
              <equals arg1="${install.sy.console.question}" arg2="y" />
           </and>
        </condition>

        <fail message="Please install AS7 or run this installer again and download an AS7 distribution.">
            <condition>
                <and>
                   <isset property="install.sy.console.question"/>
                   <equals arg1="${install.sy.console.question}" arg2="n"/>
                </and>
	    </condition>
        </fail>

	<antcall target="download-as7"/>
    </target>

    <target name="check-forge-home">
    	<property environment="env"/>
        <condition property="forge.home.set">
	       <isset property="env.FORGE_HOME"/>
        </condition>
    </target>

    <target name="request-forge-home" if="installForge" unless="forge.home.set" depends="check-forge-home">
        <input message="Please enter the path to the root folder of your Forge installation: " addproperty="FORGE_PATH_ENTERED" />
        <pathconvert targetos="unix" property="FORGE_PATH">
            <path>
                <pathelement location="${FORGE_PATH_ENTERED}"/>
            </path>
        </pathconvert>
    </target>

    <target name="validate-forge-home-version" if="installForge">
        <!-- Check that a SNAPSHOT version isn't being used -->
    	<condition property="forge.home.check">
           <and>
             <available file="${FORGE_PATH}/modules/org/jboss/forge/main/forge-shell.jar"/>
	     <available file="${FORGE_PATH}/jboss-modules.jar"/>
           </and>
        </condition>
    </target>

    <target name="set-forge-home" if="forge.home.set" depends="check-forge-home">
        <pathconvert targetos="unix" property="FORGE_PATH">
            <path>
                <pathelement location="${env.FORGE_HOME}"/>
            </path>
        </pathconvert>
    </target>

    <target name="install-sy-console" if="installSYConsole" depends="request-sy-console-install, download-sy-console">
    	<copy todir="${AS7_PATH}/modules/org/jboss/as/console/main" overwrite="true" file="res/switchyard-console-application.war"/>
		<antcall target="transform-console-module" />
		<antcall target="transform-hibernate-module" />
	</target>

	<target name="transform-console-module" depends="download-sy-tools">
        <xslt style="res/console_module.xsl"
              basedir="${AS7_PATH}/modules/org/jboss/as/console/main"
              destdir="${AS7_PATH}/modules/org/jboss/as/console/main"
              includes="module.xml"/>
        <move overwrite="true" todir="${AS7_PATH}/modules/org/jboss/as/console/main">
          <filelist dir="${AS7_PATH}/modules/org/jboss/as/console/main">
            <file name="module.html"/>
          </filelist>
          <mapper type="regexp" from="^(.*)\.html$$" to="\1.xml"/>
        </move>
    </target>

	<target name="transform-hibernate-module" depends="download-sy-tools">
        <xslt style="res/hibernate_module.xsl"
              basedir="${AS7_PATH}/modules/org/hibernate/main"
              destdir="${AS7_PATH}/modules/org/hibernate/main"
              includes="module.xml"/>
        <move overwrite="true" todir="${AS7_PATH}/modules/org/hibernate/main">
          <filelist dir="${AS7_PATH}/modules/org/hibernate/main">
            <file name="module.html"/>
          </filelist>
          <mapper type="regexp" from="^(.*)\.html$$" to="\1.xml"/>
        </move>
    </target>

    <target name="install-bpel-console" if="installBPELConsole" depends="request-bpel-console-install, download-bpel-console">
    	<copy todir="${AS7_PATH}/standalone/deployments" overwrite="true" file="res/switchyard-bpel-console-server.war"/>
        <copy todir="${AS7_PATH}/standalone/deployments" overwrite="true" file="res/switchyard-bpel-console.war"/>
    </target>

    <target name="install-forge" if="installForge" depends="request-forge-install, request-forge-home, set-forge-home, validate-forge-home-version, download-sy-forge-module" unless="SKIP_FORGE">

        <condition property="forge.plugindir.exists">
            <available file="config" filepath="${user.home}/.forge" />
        </condition>

        <echo>Creating switchyard directory...</echo>
        <mkdir dir="${user.home}/.forge/plugins/org/switchyard"/>
        <echo>Unzipping switchyard forge plugin module...</echo>
        <unzip dest="${user.home}/.forge/plugins/org/switchyard"
                src="res/switchyard-forge-plugins.zip"/>
        <echo>Unzipped SwitchYard forge plugin.</echo>

	<condition property="java.share.dir" value="/usr/share/java">
	    <available file="/usr/share/java"/>
        </condition>
	<property name="java.share.dir" value="${basedir}"/>
	<path id="usr.share.java">
            <fileset dir="${java.share.dir}">
                <include name="jaxp_transform_impl.jar"/>
                <include name="xerces-j2.jar"/>
                <include name="xalan-j2-serializer.jar"/>
            </fileset>
        </path>

	<echo>Installing forge plugin to ${user.home}/.forge ... </echo>
	<path id="forge.installer.classpath">
		<fileset dir="${FORGE_PATH}/modules/org/jboss/forge/main">
		    <include name="forge-shell-*.jar"/>
            <include name="forge-parser-java.jar"/>
		</fileset>

        <fileset dir="${FORGE_PATH}/modules/org/jboss/forge/shell/api/main">
            <include name="forge-shell-api-*"/>
        </fileset>

        <fileset dir="${FORGE_PATH}/modules/org/jboss/forge/parser/xml/main">
            <include name="forge-parser-xml-*"/>
        </fileset>

        <fileset dir="${FORGE_PATH}/modules/org/jboss/forge/parser/java/api/main">
            <include name="forge-parser-java-api-*"/>
        </fileset>

		<fileset dir="${basedir}">
 			<include name="lib/switchyard-forge-installer.jar"/>
		</fileset>

                <path refid="usr.share.java"/>

	</path>
	<java classname="org.switchyard.forge.installer.Installer">
		<arg value="org.switchyard.switchyard-forge-plugin"/>
		<arg value="${project.version}"/>
		<classpath refid="forge.installer.classpath"/>
	</java>
    </target>

    <!-- jBPM console commands not supported in 0.3

    <target name="download-jbpm-console-check">
        <condition property="jbpm.console.not.available">
           <not>
             <available file="${basedir}/switchyard-jbpm-gwt-console-server-${project.version}.war"/>
           </not>
        </condition>
    </target>

    <target name="download-jbpm-console" depends="download-jbpm-console-check" if="jbpm.console.not.available">
        <echo>Downloading JBPM Console  ..."</echo>
        <get src="${switchyard.jbpm.console.url}" dest="${basedir}/switchyard-jbpm-gwt-console-server.war"/>
    <get src="${jbpm.gwt.console.url}" dest="${basedir}/jbpm-gwt-console.war"/>
    </target>

    <target name="request-jbpm-console-install">
        <input message="Would you like to install the JBPM Console (y/n)?" addproperty="install.jbpm.console.question" validargs="y,n" defaultvalue="y" />

        <condition property="installJBPMConsole">
           <and>
              <isset property="install.jbpm.console.question" />
              <equals arg1="${install.jbpm.console.question}" arg2="y" />
           </and>
        </condition>
        <antcall target="download-jbpm-console"/>
    </target>

    <target name="install-jbpm-console" if="installJBPMConsole" depends="request-jbpm-console-install">
    <copy todir="${AS7_PATH}/standalone/deployments" file="${basedir}/switchyard-jbpm-gwt-console-server.war"/>
        <copy todir="${AS7_PATH}/standalone/deployments" file="${basedir}/jbpm-gwt-console.war"/>
    </target>

    -->

</project>
