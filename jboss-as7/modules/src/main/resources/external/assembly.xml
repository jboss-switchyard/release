<!--
  ~ JBoss, Home of Professional Open Source
  ~ Copyright 2011 Red Hat Inc. and/or its affiliates and other contributors
  ~ as indicated by the @author tags. All rights reserved.
  ~ See the copyright.txt in the distribution for a
  ~ full listing of individual contributors.
  ~
  ~ This copyrighted material is made available to anyone wishing to use,
  ~ modify, copy, or redistribute it subject to the terms and conditions
  ~ of the GNU Lesser General Public License, v. 2.1.
  ~ This program is distributed in the hope that it will be useful, but WITHOUT A
  ~ WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
  ~ PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
  ~ You should have received a copy of the GNU Lesser General Public License,
  ~ v.2.1 along with this distribution; if not, write to the Free Software
  ~ Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  ~ MA  02110-1301, USA.
  -->

<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0 http://maven.apache.org/xsd/assembly-1.1.0.xsd">

    <files>
        <file>
            <source>src/main/resources/external/milyn/module.xml</source>
            <outputDirectory>/modules/org/milyn/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/xstream/module.xml</source>
            <outputDirectory>/modules/com/thoughtworks/xstream/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/freemarker/module.xml</source>
            <outputDirectory>/modules/org/freemarker/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/drools/knowledge-api/module.xml</source>
            <destName>module.xml</destName>
            <outputDirectory>/modules/org/drools/knowledge-api/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/drools/drools-core/module.xml</source>
            <destName>module.xml</destName>
            <outputDirectory>/modules/org/drools/drools-core/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/drools/drools-compiler/module.xml</source>
            <destName>module.xml</destName>
            <outputDirectory>/modules/org/drools/drools-compiler/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/drools/drools-persistence-jpa/module.xml</source>
            <destName>module.xml</destName>
            <outputDirectory>/modules/org/drools/drools-persistence-jpa/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/antlr/antlr-runtime/module.xml</source>
            <outputDirectory>/modules/org/antlr/antlr-runtime/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/eclipse/jdt/core/compiler/ecj/module.xml</source>
            <outputDirectory>/modules/org/eclipse/jdt/core/compiler/ecj/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/mvel/mvel2/module.xml</source>
            <outputDirectory>/modules/org/mvel/mvel2/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/jbpm/jbpm-flow/module.xml</source>
            <outputDirectory>/modules/org/jbpm/jbpm-flow/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/jbpm/jbpm-flow-builder/module.xml</source>
            <outputDirectory>/modules/org/jbpm/jbpm-flow-builder/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/jbpm/jbpm-persistence-jpa/module.xml</source>
            <outputDirectory>/modules/org/jbpm/jbpm-persistence-jpa/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/jbpm/jbpm-bpmn2/module.xml</source>
            <outputDirectory>/modules/org/jbpm/jbpm-bpmn2/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/jbpm/jbpm-workitems/module.xml</source>
            <outputDirectory>/modules/org/jbpm/jbpm-workitems/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/jbpm/jbpm-human-task/module.xml</source>
            <outputDirectory>/modules/org/jbpm/jbpm-human-task/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/apache/cxf/jaxrs/module.xml</source>
            <outputDirectory>/modules/org/apache/cxf/jaxrs/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/apache/mina/mina-core/module.xml</source>
            <outputDirectory>/modules/org/apache/mina/mina-core/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/camel/core/module.xml</source>
            <outputDirectory>/modules/org/apache/camel/core/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/camel/cxf/module.xml</source>
            <outputDirectory>/modules/org/apache/camel/cxf/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/camel/spring/module.xml</source>
            <outputDirectory>/modules/org/apache/camel/spring/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/camel/jms/module.xml</source>
            <outputDirectory>/modules/org/apache/camel/jms/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/camel/ftp/module.xml</source>
            <outputDirectory>/modules/org/apache/camel/ftp/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/saxon/module.xml</source>
            <outputDirectory>/modules/net/sourceforge/saxon/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/springframework/module.xml</source>
            <outputDirectory>/modules/org/springframework/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <!--<file>-->
            <!--<source>src/main/resources/external/clojure/module.xml</source>-->
            <!--<outputDirectory>/modules/org/clojure/clojure/main</outputDirectory>-->
            <!--<filtered>true</filtered>-->
        <!--</file>-->
        <file>
            <source>src/main/resources/external/ws-impl/module.xml</source>
            <outputDirectory>/modules/org/switchyard/component/soap/ws-impl/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/saaj-impl/module.xml</source>
            <outputDirectory>/modules/org/switchyard/component/soap/saaj-impl/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/batik/module.xml</source>
            <outputDirectory>/modules/batik/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/jettison/module.xml</source>
            <outputDirectory>/modules/org/codehaus/jettison/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <!-- Temporary fix, will be removed in next upgrade to AS7 -->
        <file>
            <source>src/main/resources/external/weld-core/module.xml</source>
            <outputDirectory>/modules/org/jboss/weld/core/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/apache/commons/net/module.xml</source>
            <outputDirectory>/modules/org/apache/commons/net/main</outputDirectory>
            <filtered>true</filtered>
        </file>
        <file>
            <source>src/main/resources/external/jcraft/jsch/module.xml</source>
            <outputDirectory>/modules/com/jcraft/jsch/main</outputDirectory>
            <filtered>true</filtered>
        </file>
    </files>
    <dependencySets>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.milyn:milyn-smooks-all</include>
            </includes>
            <outputDirectory>/modules/org/milyn/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.milyn}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>com.thoughtworks.xstream:xstream</include>
            </includes>
            <outputDirectory>/modules/com/thoughtworks/xstream/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.xstream}.${artifact.extension}
            </outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.freemarker:freemarker</include>
            </includes>
            <outputDirectory>/modules/org/freemarker/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.freemarker}.${artifact.extension}
            </outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.drools:knowledge-api</include>
            </includes>
            <outputDirectory>/modules/org/drools/knowledge-api/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.drools}.${artifact.extension}
            </outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.drools:drools-core</include>
            </includes>
            <outputDirectory>/modules/org/drools/drools-core/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.drools}.${artifact.extension}
            </outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.drools:drools-compiler</include>
            </includes>
            <outputDirectory>/modules/org/drools/drools-compiler/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.drools}.${artifact.extension}
            </outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.drools:drools-persistence-jpa</include>
            </includes>
            <outputDirectory>/modules/org/drools/drools-persistence-jpa/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.drools}.${artifact.extension}
            </outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.antlr:antlr-runtime</include>
            </includes>
            <outputDirectory>/modules/org/antlr/antlr-runtime/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.antlr}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.eclipse.jdt.core.compiler:ecj</include>
            </includes>
            <outputDirectory>/modules/org/eclipse/jdt/core/compiler/ecj/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.ecj}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.mvel:mvel2</include>
            </includes>
            <outputDirectory>/modules/org/mvel/mvel2/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.mvel}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.jbpm:jbpm-flow</include>
            </includes>
            <outputDirectory>/modules/org/jbpm/jbpm-flow/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.jbpm}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.jbpm:jbpm-flow-builder</include>
            </includes>
            <outputDirectory>/modules/org/jbpm/jbpm-flow-builder/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.jbpm}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.jbpm:jbpm-bpmn2</include>
            </includes>
            <outputDirectory>/modules/org/jbpm/jbpm-bpmn2/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.jbpm}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.jbpm:jbpm-workitems</include>
            </includes>
            <outputDirectory>/modules/org/jbpm/jbpm-workitems/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.jbpm}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.jbpm:jbpm-human-task</include>
            </includes>
            <outputDirectory>/modules/org/jbpm/jbpm-human-task/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.jbpm}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.jbpm:jbpm-persistence-jpa</include>
            </includes>
            <outputDirectory>/modules/org/jbpm/jbpm-persistence-jpa/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.jbpm}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.apache.cxf:cxf-rt-frontend-jaxrs</include>
            </includes>
            <outputDirectory>/modules/org/apache/cxf/jaxrs/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.cxf}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.apache.mina:mina-core</include>
            </includes>
            <outputDirectory>/modules/org/apache/mina/mina-core/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.mina}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.apache.camel:camel-core</include>
            </includes>
            <outputDirectory>/modules/org/apache/camel/core/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.camel}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.apache.camel:camel-cxf</include>
            </includes>
            <outputDirectory>/modules/org/apache/camel/cxf/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.camel}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.apache.camel:camel-spring</include>
            </includes>
            <outputDirectory>/modules/org/apache/camel/spring/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.camel}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.apache.camel:camel-jms</include>
            </includes>
            <outputDirectory>/modules/org/apache/camel/jms/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.camel}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.apache.camel:camel-ftp</include>
            </includes>
            <outputDirectory>/modules/org/apache/camel/ftp/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.camel}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>
        <dependencySet>
           <useTransitiveDependencies>false</useTransitiveDependencies>
           <includes>
              <include>net.sourceforge.saxon:saxonhe</include>
           </includes>
           <outputDirectory>/modules/net/sourceforge/saxon/main</outputDirectory>
           <outputFileNameMapping>${artifact.artifactId}-${version.saxon}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.springframework:spring-core</include>
                <include>org.springframework:spring-context</include>
                <include>org.springframework:spring-beans</include>
                <include>org.springframework:spring-jms</include>
                <include>org.springframework:spring-tx</include>
            </includes>
            <outputDirectory>/modules/org/springframework/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.spring}.${artifact.extension}
            </outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>batik:batik-anim</include>
                <include>batik:batik-awt-util</include>
                <include>batik:batik-bridge</include>
                <include>batik:batik-codec</include>
                <include>batik:batik-css</include>
                <include>batik:batik-dom</include>
                <include>batik:batik-ext</include>
                <include>batik:batik-gvt</include>
                <include>batik:batik-parser</include>
                <include>batik:batik-script</include>
                <include>batik:batik-svg-dom</include>
                <include>batik:batik-svggen</include>
                <include>batik:batik-transcoder</include>
                <include>batik:batik-util</include>
                <include>batik:batik-xml</include>
            </includes>
            <outputDirectory>/modules/batik/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.batik}.${artifact.extension}
            </outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.apache.ws.commons.axiom:axiom-api</include>
                <include>org.apache.ws.commons.axiom:axiom-impl</include>
            </includes>
            <outputDirectory>/modules/batik/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.axiom}.${artifact.extension}
            </outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>xml-apis:xml-apis</include>
                <include>xml-apis:xml-apis-ext</include>
            </includes>
            <outputDirectory>/modules/batik/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.xml-apis}.${artifact.extension}
            </outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.codehaus.jettison:jettison</include>
            </includes>
            <outputDirectory>/modules/org/codehaus/jettison/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.jettison}.${artifact.extension}
            </outputFileNameMapping>
        </dependencySet>

        <!-- Temporary fix, will be removed in next upgrade to AS7 -->
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>org.jboss.weld:weld-core</include>
            </includes>
            <outputDirectory>/modules/org/jboss/weld/core/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.weld.core}.${artifact.extension}
            </outputFileNameMapping>
        </dependencySet>

        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>com.jcraft:jsch</include>
            </includes>
            <outputDirectory>/modules/com/jcraft/jsch/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.jsch}.${artifact.extension}
            </outputFileNameMapping>
        </dependencySet>
        <dependencySet>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <includes>
                <include>commons-net:commons-net</include>
            </includes>
            <outputDirectory>/modules/org/apache/commons/net/main</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}-${version.commons.net}.${artifact.extension}
            </outputFileNameMapping>
        </dependencySet>
        <!--<dependencySet>-->
            <!--<useTransitiveDependencies>false</useTransitiveDependencies>-->
            <!--<includes>-->
                <!--<include>org.clojure:clojure</include>-->
            <!--</includes>-->
            <!--<outputDirectory>/modules/org/clojure/clojure/main</outputDirectory>-->
            <!--<outputFileNameMapping>${artifact.artifactId}-${version.clojure}.${artifact.extension}-->
            <!--</outputFileNameMapping>-->
        <!--</dependencySet>-->
    </dependencySets>
</assembly>
